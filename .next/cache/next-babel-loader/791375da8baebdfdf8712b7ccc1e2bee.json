{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\next-project\\\\pages\\\\hook.tsx\";\nimport React, { useState } from 'react';\nimport ReduxHOC from \"../src/components/reduxHOC\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar Hook = function Hook() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 1),\n      count = _useState2[0];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var chaneUser = useDispatch(function (state) {\n    return state.chaneUser;\n  });\n  console.log('user', user);\n  console.log('chaneUser', chaneUser);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, count);\n};\n\nexport default ReduxHOC(Hook);","map":{"version":3,"sources":["D:\\next-project\\pages\\hook.tsx"],"names":["Hook","count","useState","user","useSelector","state","chaneUser","useDispatch","console","ReduxHOC"],"mappings":";;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,OAAA,QAAA,MAAA,4BAAA;AACA,SAAA,WAAA,EAAA,WAAA,QAAA,aAAA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,MAAA,SAAA,GACCE,QAAQ,CADT,CACS,CADT;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACRD,KADQ,GAAA,UAAA,CAAA,CAAA,CAAA;;AAGf,MAAME,IAAI,GAAGC,WAAW,CACpB,UAAA,KAAA,EAAK;AAAA,WAAIC,KAAK,CAAT,IAAA;AADT,GAAwB,CAAxB;AAIA,MAAMC,SAAS,GAACC,WAAW,CACvB,UAAA,KAAA,EAAK;AAAA,WAAEF,KAAK,CAAP,SAAA;AADT,GAA2B,CAA3B;AAGAG,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,MAAAA,EAAAA,IAAAA;AACAA,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,SAAAA;AAIA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EADJ,KACI,CADJ;AAfJ,CAAA;;AAsBA,eAAeC,QAAQ,CAAvB,IAAuB,CAAvB","sourcesContent":["import React, {useState} from 'react';\r\nimport ReduxHOC from \"../src/components/reduxHOC\";\r\nimport { useSelector,useDispatch } from 'react-redux'\r\n\r\nconst Hook = () => {\r\n    const [count] = useState(0);\r\n\r\n    const user = useSelector(\r\n        state => state.user\r\n    );\r\n\r\n    const chaneUser=useDispatch(\r\n        state=>state.chaneUser\r\n    );\r\n    console.log('user', user);\r\n    console.log('chaneUser', chaneUser);\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            {count}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReduxHOC(Hook);"]},"metadata":{},"sourceType":"module"}